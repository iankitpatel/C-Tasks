Write a simple C program that reads an integer from the user and prints the multiplication table of the given number using a For loop.

Example :

Sample input : N = 5

Sample output :

5 x 1 = 5
5 x 2 = 10
5 x 3 = 15
5 x 4 = 20
.....
.....
5 x 10 = 50

int main() {
    int n,i;
    printf("Enter a number: ");
    scanf("%d",&n);
    for (i=1;i<=10;i++){
        printf("%d * %d = %d\n", n,i,n*i);
    }
    return 0;
}
=======================================================================================================================================
Write a C program to read one integer number from user and check it is Prime number or not

Sample input  : Enter an integer: 5
Sample output : 5 is prime number.

Sample input  : Enter an integer: 6
Sample output : 6 is not prime number.

int n,i,c=0;
    printf("Enter a number: ");
    scanf("%d",&n);
    if(n==1) printf("not a prime or composite no.");
    else
    {
    for (i=1;i<=n;i++){
        if(n%i==0) c++;
    }
    printf(c==2?"prime no.":"not a prime no.");
    }
    return 0;
=======================================================================================================================================
Write a C program to calculate the factorial of a given positive integer. 
The program should prompt the user to enter a number, compute its factorial, and display the result. 
-> If the user enters a negative number, the program should display an error message: "Invalid input...Please enter a positive integer."
-> If the input is 0, the program should print Factorial of 0 = 1 because by definition, 0!=1
-> FORMULA => n!=1×2×3×...×n.

Sample input  : Enter a positive integer: -5
Sample output : Factorial of 5 = Invalid input...Please enter a positive integer.

Sample input  : Enter a positive integer: 5
Sample output : Factorial of 5 = 120

int main() {
    int n,i,f=1,s=0;
    printf("Enter a number: ");
    scanf("%d",&n);
    if (n<0) puts("Invalid input...Please enter a positive integer.");
    else
    {
    for (i=1;n>=1;i++){
        f=f*n;
        n--;
    }
    printf(" factorial is = %d",f);
    }
    return 0;
}
======================================================================================================================================
Write C program to check given number is spy number or not.

spy number :
A spy number is a number where the sum of its digits equals the product of its digits.
For example :
1124 is a spy number, because the sum of its digits is 1+1+2+4=8 and the product of its digits is 1*1*2*4=8 is equal.

int main() {
    int n,i,r,s=0,p=1;
    printf("Enter a number: ");
    scanf("%d",&n);
  
    for (;i<n;){
        r=n%10;
        s=s+r;
        p=p*r;
        n=n/10;
    }
    
    printf((s==p)? "spy  no.": "not a spy no.");
    
    return 0;
}
======================================================================================================================================
(USING FOR LOOP) Write a C program to check whether a given integer is a perfect number. 
A number is considered perfect if it is equal to the sum of all its divisors excluding itself. 
For example, 6 is a perfect number because the divisors of 6 are 1, 2, and 3, and their sum is 6. 
Similarly, 28 is a perfect number because the sum of its divisors (1, 2, 4, 7, 14) is also 28.

Sample input  : 6
Sample output : 6 is perfect number

Sample input  : 12
Sample output : 12 is not perfect number

 int n,i,s=0;
    printf("Enter a number: ");
    scanf("%d",&n);
  
    for (i=1;i<=n/2;i++){
        if(n%i==0) s=s+i;
        
    }
    printf(n==s? "perfect no.": "not a perfect no.");
    
    return 0;
======================================================================================================================================
(USING FOR LOOP) Write C program to check given number is Disarium Number or not.

Disarium Number :
A number is a Disarium number if the sum of the digits powered with their respective positions is equal to the number itself.
For example:

Sample input  : 89
Sample output : 89 is a Disarium number.
Explanation   : 89:> 8^1 + 9^2 = 89

Sample input  : 175
Sample output : 
Explanation   : 175:> 1^1 + 7^2 + 5^3 = 175

Sample input  : 45
Sample output : 45 is NOT a Disarium number
Explanation   : 45:> 4^1 + 5^2 = 29

int main() {
    int n,i=1,r,q,s=0,c=0;
    printf("Enter a number: ");
    scanf("%d",&n);//89
    int m=n;
    
    while(i<=n){
        q=m%10;
        n=n/10;
        c++;
    } printf("count = %d\n",c);
  
    for (i=1;i<n;i++){
        r=n%10;
        s=s+pow(r,c);
        n=n/10;
        c--;
    }
    if(n==s){
        printf("%d is a Disarium number.",m);
    }
    else
        printf("%d is not a Disarium number.",m);
    
    return 0;
}

